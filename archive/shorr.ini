(шаг 0 - генерация ключей)
ввод с клавы аналогичен 1й работе
- битовая длина l
- параметр m

генерируем эллиптическую кривую, ... , получем параметры
- (p, b, Q, r), b - уравнение кривой?, a = 0

генерируем  случайное l, 0 < l < r

вычисляем P = [l]Q

получим 
{
  open_key:{
    p, "должно быть простым"
    a, "должно быть 0"
    b, "лежит в диапазоне 1..p-1"
    Q, "лежит на кривой, является образующим?"
    r, "явл образующим ([r]Q == O? норм : косяк поиска Q,r)"
    P  "принадлежит кривой, P == [l]Q"
  },
  secret_key:{
    l  "лежит в диапазоне 1..r-1"
  }
}

----------------------
(шаг 1 - формирование подписи)
1.1
  ввод с клавы
  - сообщение m     "должно удовлетворять условиям проги"
  - файлы с ключами "существование файлов, их полнота, проверки содержимого шага 0"
  Генерация случайного k, 0 < k < r "лежит в диапазоне 1..r-1"

1.2
  R = [k]Q 
  e = hash(m, R), R - сид хэша (мб соль) "обязательно число"
  Если e == 0 (mod r), вернуться на шаг 1.1      "обязательно != 0"
  s = le + k (mod r)

получим message = {
  start_msg:  m,
  hash:       e,
  num:        s
}

--------------------------
(шаг 2 - проверка подписи)
  - файлы с ключами "существование файлов, их полнота, проверки содержимого шага 0"
  - файл с подписью "существование файла, его полнота"
2.1
  R_new = [s]Q-[e]p
  e_new = hash(m, R_new)

2.2
  Проверка e == e_new (mod p)
